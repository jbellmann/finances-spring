buildscript {
    ext {
        kotlinVersion = '1.2.10'
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

description = "finances-service"
group = 'com.github.adeynack'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}


ext {
    springCloudVersion = 'Edgware.RELEASE'
}

dependencies {

    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
//    compile('org.springframework.boot:spring-boot-starter-actuator')
//    compile('org.springframework.boot:spring-boot-actuator-docs')
//	compile('org.springframework.cloud:spring-cloud-starter-hystrix')
//	compile('org.springframework.cloud:spring-cloud-starter-hystrix-dashboard')
//	compile('org.springframework.boot:spring-boot-starter-data-jpa')
//	compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
//	compile('org.springframework.boot:spring-boot-starter-websocket')
    runtime('org.springframework.boot:spring-boot-devtools')

    runtime('com.h2database:h2')
    runtime('org.postgresql:postgresql')

    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.8.10"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.withType(Test) {
    afterTest { desc, result ->
        String rt = result.resultType.toString()
        String successIcon = rt == "SUCCESS" ? "🔹" : rt == "FAILURE" ? "❌" : "🔸️"
        logger.quiet "ⓣ  ${successIcon}  ${desc.className}#`${desc.name}` : ${rt}"
    }
}
